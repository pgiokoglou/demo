#!/bin/zsh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

# shellcheck disable=SC2154
# shellcheck disable=SC2034
source "$(dirname "$0")/script.cfg"
scriptName=$(basename "$0")

echo "${Red}Executing $scriptName${NC}"

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '0-9a-f' '0')

# shellcheck disable=SC2162
while read local_ref local_oid remote_ref remote_oid; do
  if test "$local_oid" = "$zero"; then
    # Handle delete
    :
  else

    zsh "$scriptPath/scripts/check_consistency.zsh"

    [[ $? == 1 ]] && echo "${Red}FAILED in $scriptName with code ${NC}" && exit 1

  fi
done

echo "${LightGreen}Done with $scriptName${NC}"
exit 0
